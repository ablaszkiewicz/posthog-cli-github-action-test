name: "ablaszkiewicz/posthog-upload-sourcemaps"

description: "Inject and upload sourcemaps with posthog-cli"

author: "ablaszkiewicz"

branding:
  icon: upload-cloud
  color: purple

inputs:
  directory:
    description: "Directory containing built assets (e.g., dist)"
    required: true
  host:
    description: "Optional PostHog host"
    required: false
  cli-token:
    description: "PostHog CLI token"
    required: true
  env-id:
    description: "PostHog environment ID"
    required: true
  project:
    description: "Optional project identifier. Defaults: Git repo → this flag → empty."
    required: false
  version:
    description: "Optional release/version (e.g., commit SHA). Defaults: Git commit → this flag → empty."
    required: false

runs:
  using: "composite"
  steps:
    - name: Install posthog CLI
      shell: bash
      run: npm i -g @posthog/cli

    - name: Inject sourcemaps
      shell: bash
      env:
        POSTHOG_CLI_ENV_ID: ${{ inputs.env-id }}
        POSTHOG_CLI_TOKEN: ${{ inputs.cli-token }}
      run: posthog-cli sourcemap inject --directory "${{ inputs.directory }}"

    - name: List git directory
      shell: bash
      run: |
        echo "Git directory:"
        ls -la .git

    - name: Print git info from .git/info
      shell: bash
      run: |
        echo "Git info:"
        ls -la .git/info

    - name: Upload sourcemaps
      shell: bash
      env:
        POSTHOG_CLI_ENV_ID: ${{ inputs.env-id }}
        POSTHOG_CLI_TOKEN: ${{ inputs.cli-token }}
      run: |
        set -euo pipefail
        args=(--directory "${{ inputs.directory }}")
        if [ -n "${{ inputs.project }}" ]; then
          args+=(--project "${{ inputs.project }}")
        fi
        if [ -n "${{ inputs.version }}" ]; then
          args+=(--version "${{ inputs.version }}")
        fi
        echo "Executing command: posthog-cli sourcemap upload ${args[*]}"
        posthog-cli sourcemap upload "${args[@]}"
